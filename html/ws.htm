<!DOCTYPE HTML>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset="utf-8" />
  <title>ESP8266 WebSocket2Serial Proxy</title>
  <meta name="Description" content="ESP8266 WebSocket to Serial Terminal Proxy"/>
  <meta name="author" content="Charles-Henri Hallard" />
  <link rel="shortcut icon" href="favicon.ico"/>
  <script src="jquery-1.12.3.js"></script>
  <script src="mousewheel.js"></script>
  <script src="terminal.js"></script>
  <link href="terminal.css" rel="stylesheet"/>
</head>
<body>
<script>
jQuery(document).ready(function($) {
  var ws = null;

  // Show help
  function showHelp() {
    // Close WS if already opened
    term.echo("available commands when not connected are [[b;cyan;]connect] or [[b;cyan;]help]\n" + 
                  "connect is done trough WebSocket so real URI is [[bu;;]ws://host:port/ws]\n" +
                  "as soon as you're connected to Internet you can connect anywhere\n" +
                  "examples: [[b;cyan;]connect]                connect to same host than in browser url\n" +
                  "          [[b;cyan;]connect 192.168.1.22]   connect to 192.168.1.22\n" +
                  "          [[b;cyan;]connect mywebsocket:81] connect to mywebsocket:81\n" +
                  "When you're connected to target sending help may show you target help" +
                  ""
                  ); 
  }


  // Stop WebSocket
  function stopWS() {
    // Close WS if already opened
    if (ws) {
      ws.close();
      ws = null;
    }    
  }

  function buf2hex(buffer) { // buffer is an ArrayBuffer
    return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join(' ');
  }

  // Start WebSocket
  function startWS(url) {
    if (url === undefined )
      url = document.location.host;
    stopWS();
    ws = new WebSocket('ws://'+url+'/ws');
    ws.binaryType = "arraybuffer";

    ws.onopen = function(e) {
      console.log("ws connected ", e);
      term.echo("[[b;green;]Connected to "+url+"]");
      term.echo("Press ctrl-d or type [[b;cyan;]!close] to disconnect");
      term.echo("Type [[b;cyan;]ping] so see pong response");
      term.set_prompt(url+"[[;green;] #]");
    };

    ws.onclose = function(e){
      console.log("ws closed ", e);
      term.echo("[[b;red;]Disconnected]");
      term.set_prompt('[[;red;]>]');
    };

    ws.onerror = function(e){
      console.log("ws error ", e);
      term.echo("Error");
    };

    ws.onmessage = function(e){
      var msg = "";
      if(e.data instanceof ArrayBuffer){
        // WS binary in blue    	
        color = 'light';
        var bytes = new Uint8Array(e.data); 
		msg = buf2hex(bytes);
        //for (var i = 0; i < bytes.length; i++) {
        //  msg += String.fromCharCode(bytes[i]);
        //}
      } else {
        // WS text in green
        color = 'green';
        msg = e.data;
        // replace ] color ending by html code
        //msg = msg.replace(/\]/g, "&#93;");
      }
      // remove \r and \n terminal echo them
      //msg = msg.replace(/(\r\n|\n|\r)/gm,"");
      //term.echo("[[;"+color+";]"+msg+"]");
      term.echo(msg);
    };
  }

  // Instanciate the terminal object
  var term = $('body').terminal( {
      help: function() { showHelp(); },
      connect: function(arg1) { 
        startWS(arg1); 
        this.push(function(command, term) { 
          // Interpreter command '!', don't send but interpret
          if ( command.charAt(0) == '!' ) {
            if (command == "!close") {
              stopWS(); 
              this.pop(); 
            }
          // Send to WebSocket
          } else {
            ws.send(command); 
          }
        },{ onExit: function(){stopWS();}});
      },
    }, 

    // Default terminal settings and greetings
    { prompt: '[[;red;]>]', 
      checkArity : false,
      greetings: "================================================\n" +
                 "= ESP8266 WebSocket To Serial terminal demo    =\n" + 
                 "= Using great and wonderfull JQuery Terminal   =\n" +
                 "= see [[bu!;;]http://terminal.jcubic.pl/] for more info =\n" +
                 "= Get this full application source code at     =\n" +
                 "= [[bu!;;]https://github.com/hallard/WebSocketToSerial] =\n" +
                 "================================================\n" +
                 "Type [[b;cyan;]help] to see available commands\n" +
                 "Click on following link to see and edit device\n" +
                 "SPIFFS filesystem [[bu!;;]http://" + document.location.host + "/edit.htm]\n" +
                 "Type [[b;cyan;]connect] to connect to [[bu!;;]" + document.location.host + "]"
    }
  );
});
</script>
</body>
</html>